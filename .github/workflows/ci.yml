name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Zig
      uses: goto-bus-stop/setup-zig@v2
      with:
        version: 0.14.1
      
    - name: Run unit tests
      run: zig build test
      
  end-to-end:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Zig
      uses: goto-bus-stop/setup-zig@v2
      with:
        version: 0.14.1
      
    - name: Build project
      run: zig build
      
    - name: Create config directory
      run: mkdir -p ~/.config/hyprshot-cloud
      
    - name: Create config file from secret
      run: echo '${{ secrets.S3_CONFIG_JSON }}' > ~/.config/hyprshot-cloud/config.json
      
    - name: Run end-to-end tests
      run: |
        # Create a test file
        echo "This is a test file for CI" > test-file.txt
        
        # Delete test bucket if it already exists (from previous runs)
        echo "Checking if test bucket exists..."
        bucket_list=$(./zig-out/bin/hyprshot-cloud list-buckets 2>&1)
        echo "Bucket list output: $bucket_list"
        if echo "$bucket_list" | grep -q "hyprshot-cloud-ci-test"; then
          echo "Test bucket exists from previous run, deleting it first..."
          # Try to delete any existing objects in the bucket first
          echo "Listing objects in bucket..."
          object_list=$(./zig-out/bin/hyprshot-cloud list-objects --bucket hyprshot-cloud-ci-test 2>&1)
          object_exit_code=$?
          echo "Object list output: $object_list"
          if [ $object_exit_code -eq 0 ] && [ -n "$object_list" ]; then
            echo "Deleting existing objects..."
            # For each object, delete it
            echo "$object_list" | while read -r line; do
              if [ -n "$line" ]; then
                # Skip header lines and empty lines
                if [[ "$line" != "Objects:" && "$line" != "" ]]; then
                  # The line might be just the filename or have the full path
                  if [[ "$line" == *"_test-file.txt"* ]]; then
                    echo "Deleting object: $line"
                    # Retry deletion up to 3 times
                    for i in {1..3}; do
                      delete_output=$(./zig-out/bin/hyprshot-cloud delete-object "$line" --bucket hyprshot-cloud-ci-test 2>&1)
                      delete_exit_code=$?
                      echo "Delete object attempt $i output: $delete_output"
                      if [ $delete_exit_code -eq 0 ]; then
                        echo "Object $line deleted successfully on attempt $i"
                        break
                      else
                        echo "Attempt $i failed to delete object $line with exit code $delete_exit_code"
                        if [ $i -lt 3 ]; then
                          echo "Retrying in 2 seconds..."
                          sleep 2
                        else
                          echo "ERROR: Failed to delete object $line after 3 attempts"
                          # Don't exit here, continue with other objects
                        fi
                      fi
                    done
                  fi
                fi
              fi
            done
          else
            echo "No objects to delete or list-objects failed with exit code $object_exit_code"
          fi
          # Now delete the bucket with retry logic
          echo "Deleting bucket..."
          bucket_deleted=false
          for i in {1..3}; do
            delete_bucket_output=$(./zig-out/bin/hyprshot-cloud delete-bucket --bucket hyprshot-cloud-ci-test 2>&1)
            delete_bucket_exit_code=$?
            echo "Delete bucket attempt $i output: $delete_bucket_output"
            if [ $delete_bucket_exit_code -eq 0 ]; then
              echo "Bucket deleted successfully on attempt $i"
              bucket_deleted=true
              break
            else
              echo "Attempt $i failed to delete bucket with exit code $delete_bucket_exit_code"
              if [ $i -lt 3 ]; then
                echo "Retrying in 2 seconds..."
                sleep 2
              fi
            fi
          done
          
          if [ "$bucket_deleted" = true ]; then
            # Wait a moment to ensure the bucket is fully deleted
            sleep 2
          else
            echo "ERROR: Failed to delete bucket after 3 attempts"
          fi
        fi
        
        # Create a test bucket
        echo "Creating test bucket..."
        create_output=$(./zig-out/bin/hyprshot-cloud create-bucket --bucket hyprshot-cloud-ci-test 2>&1)
        create_exit_code=$?
        echo "Create bucket output: $create_output"
        if [ $create_exit_code -ne 0 ]; then
          echo "ERROR: Bucket creation failed with exit code $create_exit_code"
          exit $create_exit_code
        fi
        
        # Upload the test file
        echo "Uploading test file..."
        upload_output=$(./zig-out/bin/hyprshot-cloud upload test-file.txt --bucket hyprshot-cloud-ci-test 2>&1)
        upload_exit_code=$?
        echo "Upload output: $upload_output"
        if [ $upload_exit_code -ne 0 ]; then
          echo "ERROR: Upload failed with exit code $upload_exit_code"
          exit $upload_exit_code
        fi
        
        # List objects in the bucket and verify our file is there
        echo "Verifying file was uploaded..."
        output=$(./zig-out/bin/hyprshot-cloud list-objects --bucket hyprshot-cloud-ci-test 2>&1)
        echo "Full output: $output"
        if [ -z "$output" ]; then
          echo "ERROR: list-objects command returned no output"
          exit 1
        fi
        if echo "$output" | grep -q "test-file.txt"; then
          echo "File found in bucket as expected"
        else
          # The file might have a timestamp prefix, check for that
          if echo "$output" | grep -q "_test-file.txt"; then
            echo "File with timestamp prefix found in bucket as expected"
          else
            echo "ERROR: File not found in bucket"
            echo "Output was: $output"
            exit 1
          fi
        fi
        
        # List buckets and verify our test bucket is there
        echo "Verifying bucket was created..."
        output=$(./zig-out/bin/hyprshot-cloud list-buckets)
        if echo "$output" | grep -q "hyprshot-cloud-ci-test"; then
          echo "Bucket found as expected"
        else
          echo "ERROR: Bucket not found"
          echo "Output was: $output"
          exit 1
        fi
        
        # Get the actual object key (with timestamp prefix)
        echo "Getting object key for deletion..."
        object_key=$(./zig-out/bin/hyprshot-cloud list-objects --bucket hyprshot-cloud-ci-test | grep "_test-file.txt" | head -n 1)
        
        # Delete the test object
        echo "Deleting test object with key: $object_key"
        ./zig-out/bin/hyprshot-cloud delete-object "$object_key" --bucket hyprshot-cloud-ci-test
        
        # Verify object was deleted
        echo "Verifying object was deleted..."
        output=$(./zig-out/bin/hyprshot-cloud list-objects --bucket hyprshot-cloud-ci-test)
        if echo "$output" | grep -q "_test-file.txt"; then
          echo "ERROR: File still found in bucket after deletion"
          echo "Output was: $output"
          exit 1
        else
          echo "File successfully deleted from bucket"
        fi
        
        # Delete the test bucket
        echo "Deleting test bucket..."
        ./zig-out/bin/hyprshot-cloud delete-bucket --bucket hyprshot-cloud-ci-test
        
        # Verify bucket was deleted
        echo "Verifying bucket was deleted..."
        output=$(./zig-out/bin/hyprshot-cloud list-buckets)
        if echo "$output" | grep -q "hyprshot-cloud-ci-test"; then
          echo "ERROR: Bucket still found after deletion"
          echo "Output was: $output"
          exit 1
        else
          echo "Bucket successfully deleted"
        fi
      
    - name: Cleanup test resources
      if: always()
      run: |
        echo "Cleaning up test resources..."
        # Try to delete any objects in the test bucket
        object_list=$(./zig-out/bin/hyprshot-cloud list-objects --bucket hyprshot-cloud-ci-test 2>/dev/null || echo "")
        if [ -n "$object_list" ]; then
          echo "Deleting remaining objects..."
          echo "$object_list" | while read -r line; do
            if [ -n "$line" ]; then
              # Skip header lines and empty lines
              if [[ "$line" != "Objects:" && "$line" != "" ]]; then
                # The line might be just the filename or have the full path
                if [[ "$line" == *"_test-file.txt"* ]]; then
                  ./zig-out/bin/hyprshot-cloud delete-object "$line" --bucket hyprshot-cloud-ci-test || true
                fi
              fi
            fi
          done
        fi
        # Try to delete the test bucket
        ./zig-out/bin/hyprshot-cloud delete-bucket --bucket hyprshot-cloud-ci-test 2>/dev/null || true
        echo "Cleanup completed."
      
    - name: Verify cleanup
      if: always()
      run: |
        echo "Verifying cleanup..."
        bucket_list=$(./zig-out/bin/hyprshot-cloud list-buckets)
        if echo "$bucket_list" | grep -q "hyprshot-cloud-ci-test"; then
          echo "WARNING: Test bucket still exists after cleanup"
        else
          echo "Test bucket successfully cleaned up"
        fi
      
  build:
    needs: [test, end-to-end]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Zig
      uses: goto-bus-stop/setup-zig@v2
      with:
        version: 0.14.1
      
    - name: Build project
      run: zig build
      
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: hyprshot-cloud-${{ matrix.os }}
        path: zig-out/bin/
